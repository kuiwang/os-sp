<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scott.dev.mapper.HotelRecordMapper">
    <resultMap id="hotelResultMap" type="com.scott.dev.domain.HotelRecord">
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="cardno" jdbcType="VARCHAR" property="cardno" />
        <result column="descriot" jdbcType="VARCHAR" property="descriot" />
        <result column="ctftp" jdbcType="VARCHAR" property="ctftp" />
        <result column="ctfid" jdbcType="VARCHAR" property="ctfid" />
        <result column="gender" jdbcType="VARCHAR" property="gender" />
        <result column="birthday" jdbcType="VARCHAR" property="birthday" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="zip" jdbcType="VARCHAR" property="zip" />
        <result column="dirty" jdbcType="VARCHAR" property="dirty" />
        <result column="distinct1" jdbcType="VARCHAR" property="distinct1" />
        <result column="distinct2" jdbcType="VARCHAR" property="distinct2" />
        <result column="distinct3" jdbcType="VARCHAR" property="distinct3" />
        <result column="distinct4" jdbcType="VARCHAR" property="distinct4" />
        <result column="distinct5" jdbcType="VARCHAR" property="distinct5" />
        <result column="distinct6" jdbcType="VARCHAR" property="distinct6" />
        <result column="firstnm" jdbcType="VARCHAR" property="firstnm" />
        <result column="lastnm" jdbcType="VARCHAR" property="lastnm" />
        <result column="duty" jdbcType="VARCHAR" property="duty" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="tel" jdbcType="VARCHAR" property="tel" />
        <result column="fax" jdbcType="VARCHAR" property="fax" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="nation" jdbcType="VARCHAR" property="nation" />
        <result column="taste" jdbcType="VARCHAR" property="taste" />
        <result column="education" jdbcType="VARCHAR" property="education" />
        <result column="company" jdbcType="VARCHAR" property="company" />
        <result column="ctel" jdbcType="VARCHAR" property="ctel" />
        <result column="caddress" jdbcType="VARCHAR" property="caddress" />
        <result column="czip" jdbcType="VARCHAR" property="czip" />
        <result column="family" jdbcType="VARCHAR" property="family" />
        <result column="version" jdbcType="VARCHAR" property="version" />
        <result column="id" jdbcType="VARCHAR" property="id" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria"
                            item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and
                                    ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and
                                    ${criterion.condition}
                                    #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and
                                    ${criterion.condition}
                                    #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")"
                                        collection="criterion.value"
                                        item="listItem" open="("
                                        separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>


    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria"
                            item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and
                                    ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and
                                    ${criterion.condition}
                                    #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and
                                    ${criterion.condition}
                                    #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")"
                                        collection="criterion.value"
                                        item="listItem" open="("
                                        separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>


    <sql id="all_column">
        name, cardno, descriot, ctftp, ctfid, gender, birthday,
        address, zip,
        dirty, distinct1,
        distinct2, distinct3, distinct4,
        distinct5, distinct6, firstnm, lastnm, duty,
        mobile,
        tel, fax,
        email, nation, taste, education, company, ctel, caddress, czip,
        family,
        version, id
    </sql>




    <select id="selectByExample" parameterType="com.scott.dev.domain.HotelRecordExample"
        resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="all_column" />
        from hotel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <insert id="saveRecord" parameterType="com.scott.dev.domain.HotelRecord">
        insert into
        hotel_record
        (name, cardno, descriot,
        ctftp, ctfid,
        gender,
        birthday, address,
        zip,
        dirty, distinct1, distinct2,
        distinct3,
        distinct4, distinct5,
        distinct6, firstnm, lastnm,
        duty,
        mobile,
        tel,
        fax, email, nation,
        taste, education, company,
        ctel,
        caddress,
        czip,
        family, version,
        id
        )
        values
        (#{name,jdbcType=VARCHAR},
        #{cardno,jdbcType=VARCHAR},
        #{descriot,jdbcType=VARCHAR},
        #{ctftp,jdbcType=VARCHAR},
        #{ctfid,jdbcType=VARCHAR},
        #{gender,jdbcType=VARCHAR},
        #{birthday,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR},
        #{zip,jdbcType=VARCHAR},
        #{dirty,jdbcType=VARCHAR},
        #{distinct1,jdbcType=VARCHAR},
        #{distinct2,jdbcType=VARCHAR},
        #{distinct3,jdbcType=VARCHAR},
        #{distinct4,jdbcType=VARCHAR},
        #{distinct5,jdbcType=VARCHAR},
        #{distinct6,jdbcType=VARCHAR},
        #{firstnm,jdbcType=VARCHAR},
        #{lastnm,jdbcType=VARCHAR},
        #{duty,jdbcType=VARCHAR},
        #{mobile,jdbcType=VARCHAR},
        #{tel,jdbcType=VARCHAR},
        #{fax,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{nation,jdbcType=VARCHAR},
        #{taste,jdbcType=VARCHAR},
        #{education,jdbcType=VARCHAR},
        #{company,jdbcType=VARCHAR},
        #{ctel,jdbcType=VARCHAR},
        #{caddress,jdbcType=VARCHAR},
        #{czip,jdbcType=VARCHAR},
        #{family,jdbcType=VARCHAR},
        #{version,jdbcType=VARCHAR},
        #{id,jdbcType=VARCHAR}
        )

    </insert>


    <insert id="insertSelective" parameterType="com.scott.dev.domain.HotelRecord">
        insert into hotel_record

        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="cardno != null">
                cardno,
            </if>
            <if test="descriot != null">
                descriot,
            </if>
            <if test="ctftp != null">
                ctftp,
            </if>
            <if test="ctfid != null">
                ctfid,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="zip != null">
                zip,
            </if>
            <if test="dirty != null">
                dirty,
            </if>
            <if test="distinct1 != null">
                distinct1,
            </if>
            <if test="distinct2 != null">
                distinct2,
            </if>
            <if test="distinct3 != null">
                distinct3,
            </if>
            <if test="distinct4 != null">
                distinct4,
            </if>
            <if test="distinct5 != null">
                distinct5,
            </if>
            <if test="distinct6 != null">
                distinct6,
            </if>
            <if test="firstnm != null">
                firstnm,
            </if>
            <if test="lastnm != null">
                lastnm,
            </if>
            <if test="duty != null">
                duty,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="fax != null">
                fax,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="taste != null">
                taste,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="ctel != null">
                ctel,
            </if>
            <if test="caddress != null">
                caddress,
            </if>
            <if test="czip != null">
                czip,
            </if>
            <if test="family != null">
                family,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="id != null">
                id,
            </if>
        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="cardno != null">
                #{cardno,jdbcType=VARCHAR},
            </if>
            <if test="descriot != null">
                #{descriot,jdbcType=VARCHAR},
            </if>
            <if test="ctftp != null">
                #{ctftp,jdbcType=VARCHAR},
            </if>
            <if test="ctfid != null">
                #{ctfid,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="zip != null">
                #{zip,jdbcType=VARCHAR},
            </if>
            <if test="dirty != null">
                #{dirty,jdbcType=VARCHAR},
            </if>
            <if test="distinct1 != null">
                #{distinct1,jdbcType=VARCHAR},
            </if>
            <if test="distinct2 != null">
                #{distinct2,jdbcType=VARCHAR},
            </if>
            <if test="distinct3 != null">
                #{distinct3,jdbcType=VARCHAR},
            </if>
            <if test="distinct4 != null">
                #{distinct4,jdbcType=VARCHAR},
            </if>
            <if test="distinct5 != null">
                #{distinct5,jdbcType=VARCHAR},
            </if>
            <if test="distinct6 != null">
                #{distinct6,jdbcType=VARCHAR},
            </if>
            <if test="firstnm != null">
                #{firstnm,jdbcType=VARCHAR},
            </if>
            <if test="lastnm != null">
                #{lastnm,jdbcType=VARCHAR},
            </if>
            <if test="duty != null">
                #{duty,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                #{fax,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="taste != null">
                #{taste,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="ctel != null">
                #{ctel,jdbcType=VARCHAR},
            </if>
            <if test="caddress != null">
                #{caddress,jdbcType=VARCHAR},
            </if>
            <if test="czip != null">
                #{czip,jdbcType=VARCHAR},
            </if>
            <if test="family != null">
                #{family,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
        </trim>

    </insert>

    <delete id="deleteByExample" parameterType="com.scott.dev.domain.HotelRecordExample">
        delete from hotel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>


    <select id="countByExample" parameterType="com.scott.dev.domain.HotelRecordExample"
        resultType="java.lang.Long">
        select count(*) from hotel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update hotel_record

        <set>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.cardno != null">
                cardno = #{record.cardno,jdbcType=VARCHAR},
            </if>
            <if test="record.descriot != null">
                descriot = #{record.descriot,jdbcType=VARCHAR},
            </if>
            <if test="record.ctftp != null">
                ctftp = #{record.ctftp,jdbcType=VARCHAR},
            </if>
            <if test="record.ctfid != null">
                ctfid = #{record.ctfid,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.zip != null">
                zip = #{record.zip,jdbcType=VARCHAR},
            </if>
            <if test="record.dirty != null">
                dirty = #{record.dirty,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct1 != null">
                distinct1 =
                #{record.distinct1,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct2 != null">
                distinct2 =
                #{record.distinct2,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct3 != null">
                distinct3 =
                #{record.distinct3,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct4 != null">
                distinct4 =
                #{record.distinct4,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct5 != null">
                distinct5 =
                #{record.distinct5,jdbcType=VARCHAR},
            </if>
            <if test="record.distinct6 != null">
                distinct6 =
                #{record.distinct6,jdbcType=VARCHAR},
            </if>
            <if test="record.firstnm != null">
                firstnm = #{record.firstnm,jdbcType=VARCHAR},
            </if>
            <if test="record.lastnm != null">
                lastnm = #{record.lastnm,jdbcType=VARCHAR},
            </if>
            <if test="record.duty != null">
                duty = #{record.duty,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.fax != null">
                fax = #{record.fax,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.nation != null">
                nation = #{record.nation,jdbcType=VARCHAR},
            </if>
            <if test="record.taste != null">
                taste = #{record.taste,jdbcType=VARCHAR},
            </if>
            <if test="record.education != null">
                education =
                #{record.education,jdbcType=VARCHAR},
            </if>
            <if test="record.company != null">
                company = #{record.company,jdbcType=VARCHAR},
            </if>
            <if test="record.ctel != null">
                ctel = #{record.ctel,jdbcType=VARCHAR},
            </if>
            <if test="record.caddress != null">
                caddress = #{record.caddress,jdbcType=VARCHAR},
            </if>
            <if test="record.czip != null">
                czip = #{record.czip,jdbcType=VARCHAR},
            </if>
            <if test="record.family != null">
                family = #{record.family,jdbcType=VARCHAR},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=VARCHAR},
            </if>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
        </set>

        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>

    </update>

    <update id="updateByExample" parameterType="map">
        update hotel_record
        set name = #{record.name,jdbcType=VARCHAR},
        cardno = #{record.cardno,jdbcType=VARCHAR},
        descriot =
        #{record.descriot,jdbcType=VARCHAR},
        ctftp =
        #{record.ctftp,jdbcType=VARCHAR},
        ctfid =
        #{record.ctfid,jdbcType=VARCHAR},
        gender =
        #{record.gender,jdbcType=VARCHAR},
        birthday =
        #{record.birthday,jdbcType=VARCHAR},
        address =
        #{record.address,jdbcType=VARCHAR},
        zip =
        #{record.zip,jdbcType=VARCHAR},
        dirty =
        #{record.dirty,jdbcType=VARCHAR},
        distinct1 =
        #{record.distinct1,jdbcType=VARCHAR},
        distinct2 =
        #{record.distinct2,jdbcType=VARCHAR},
        distinct3 =
        #{record.distinct3,jdbcType=VARCHAR},
        distinct4 =
        #{record.distinct4,jdbcType=VARCHAR},
        distinct5 =
        #{record.distinct5,jdbcType=VARCHAR},
        distinct6 =
        #{record.distinct6,jdbcType=VARCHAR},
        firstnm =
        #{record.firstnm,jdbcType=VARCHAR},
        lastnm =
        #{record.lastnm,jdbcType=VARCHAR},
        duty =
        #{record.duty,jdbcType=VARCHAR},
        mobile =
        #{record.mobile,jdbcType=VARCHAR},
        tel =
        #{record.tel,jdbcType=VARCHAR},
        fax =
        #{record.fax,jdbcType=VARCHAR},
        email =
        #{record.email,jdbcType=VARCHAR},
        nation =
        #{record.nation,jdbcType=VARCHAR},
        taste =
        #{record.taste,jdbcType=VARCHAR},
        education =
        #{record.education,jdbcType=VARCHAR},
        company =
        #{record.company,jdbcType=VARCHAR},
        ctel =
        #{record.ctel,jdbcType=VARCHAR},
        caddress =
        #{record.caddress,jdbcType=VARCHAR},
        czip =
        #{record.czip,jdbcType=VARCHAR},
        family =
        #{record.family,jdbcType=VARCHAR},
        version =
        #{record.version,jdbcType=VARCHAR},
        id =
        #{record.id,jdbcType=VARCHAR}

        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>

    </update>

</mapper>